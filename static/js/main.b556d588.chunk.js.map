{"version":3,"sources":["asset/images/piggy-bank-euro.svg","components/logo.js","components/AuthenticationInput.js","firebase/firebase.js","AuthContext.js","components/VerifyEmailInfoBox.js","components/ModalBox.js","components/ErrorBox.js","views/Login.js","components/dashboard/Logout.js","components/dashboard/settings.js","components/dashboard/budget.js","components/dashboard/list-of-monthly-activities.js","components/dashboard/new-money-activities.js","views/Dashboard.js","components/dashboard/new-goal.jsx","components/dashboard/goals.js","views/Savings.js","validation/passwordValidation.js","views/Signup.js","PrivateRoute.js","UnauthenticatedRoute.js","redux/store.js","index.js"],"names":["Logo","className","src","logo","alt","AuthenticationInput","type","form","onChange","label","style","onFocus","onBlur","required","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","db","database","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","sendEmailVerification","Provider","VerifyEmailInfoBox","onLogin","resendVerificationEmail","emailSend","setEmailSend","onClick","ModalBox","onClose","ErrorBox","errorMessage","errorTitle","errorCode","styling","ResetPasswordModal","emailForNewPassword","setEmailForNewPassword","resetEmailWasSent","setResetEmailWasSent","handleResetSubmit","a","alert","onSubmit","target","Login","setEmail","setPassword","showEmailVerificationBox","setShowEmailVerificationBox","showPasswordResetModal","setShowPasswordResetModal","error","setError","canBeRedirected","setCanBeRedirected","history","useHistory","event","preventDefault","then","userCredentials","emailVerified","catch","code","push","userCredential","disabled","to","Logout","Settings","open","setOpen","Budget","budget","setBudget","isDiffGreen","isEdit","setIsEdit","isSaved","setSave","labelText","setLabelText","dispatch","useDispatch","moneyActivityList","useSelector","state","userId","useRef","HTMLInputElement","uid","dbRef","ref","callback","getBaseBudget","Promise","baseBudget","on","snapshot","userObj","val","promiseResult","calcCurrBudget","allExpenses","allCredits","forEach","entry","amount","checkEmptyBudget","undefined","editBudget","fetchUserBaseBudget","isNaN","update","parseFloat","addBudget","bind","this","name","toFixed","currBudget","checkDifference","ListOfMonthlyActivities","date","Date","currMonthandYear","String","getMonth","padStart","getFullYear","isListEmpty","setListEmpty","reRender","activityList","Object","keys","prop","list","fetchUserMoneyActivityEntries","setTimeout","map","description","isMonthly","toString","id","NewMoneyActivity","newMoneyActivityWindow","setView","isChecked","setChecked","setAmount","setDescription","typeState","setType","dd","getDate","mm","yyyy","hh","getHours","min","getMinutes","ss","getSeconds","ms","getMilliseconds","dateId","handleView","labelTextPara","defaultChecked","htmlFor","set","Dashboard","isActive","setActive","activeClassName","NewGoal","goalAmount","setGoalAmount","monthlyGoalAmount","setMonthlyGoalAmount","goalName","setGoalName","newGoalWindow","dbRefGoals","dbRefExpenses","addNewGoal","Goals","goalList","setGoalList","console","log","fetchCurrentGoals","parseInt","Savings","passwordMinEigthCharacters","RegExp","passwordMinOneSpecialCharacter","passwordMinOneCapitalizedLetter","passwordMinOneNumber","validatePassword","passwordConfirmation","test","Signup","setPasswordConfirmation","passwordRulesView","createDatabaseEntry","expenses","goals","History","checkIfAllFieldsAreFilled","validParameters","PrivateRoute","Component","component","rest","userIsLoggedInAndVerified","render","props","loggerMiddleware","createLogger","initialState","onDashBoardLoad","copiedMoneyActivityList","onAddMoneyEntry","onDeleteMoneyEntry","entryId","deleteEntryIndex","findIndex","findEntryIndexById","splice","onSavingsLoad","copiedGoalList","setBaseBudget","store","createStore","action","warn","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","vh","innerHeight","document","documentElement","setProperty","rootElement","getElementById","createElement","ReactDOM","basename","exact","path"],"mappings":"4iBAAe,G,MAAA,IAA0B,6C,eCsB1BA,MAlBf,WACE,OACE,sBAAKC,UAAU,WAAf,UACD,qBAAKA,UAAU,eAAf,SACE,qBAAKA,UAAU,WAAWC,IAAKC,EAAMC,IAAI,iBAE3C,sBAAKH,UAAU,YAAf,UACE,oBAAIA,UAAU,WAAd,uBAGA,oBAAIA,UAAU,cAAd,gDCeUI,G,MA1Ba,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OAC1E,OACC,sBAAKX,UAAU,YAAYS,MAAOA,EAAlC,UACW,aAATJ,GACA,qCACC,sBAAML,UAAU,2BAAhB,kBACA,uBAAOA,UAAU,iBAAiBK,KAAK,WAAWC,KAAMA,EAAMC,SAAUA,EAAUG,QAASA,EAASC,OAAQA,EAAQC,UAAQ,OAGnH,UAAVP,GACA,qCACC,sBAAML,UAAU,2BAAhB,oBACA,uBAAOA,UAAU,iBAAiBK,KAAK,OAAOC,KAAMA,EAAMC,SAAUA,EAAUK,UAAQ,OAGxE,YAAVP,GACL,qCACC,sBAAML,UAAU,2BAAhB,kBACA,uBAAOA,UAAU,yBAAyBK,KAAK,WAAWC,KAAMA,EAAMC,SAAUA,EAAUG,QAASA,EAASC,OAAQA,EAAQC,UAAQ,OAGtI,sBAAMZ,UAAU,iBAAhB,SAAkCQ,S,0BCPrCK,IAASC,cAXY,CACpBC,OAAQ,0CACRC,WAAY,4BACZC,YAAa,oEACbC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIhBT,IAASU,YAGF,IAAMC,EAAOX,IAASW,OAChBC,EAAKZ,IAASa,WClBrBC,GDmBSd,EAAf,ECnBoBe,IAAMC,iBAGbC,EAAU,WACtB,OAAOC,qBAAWJ,IAINK,EAAe,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAELC,qBAFK,mBAEpCC,EAFoC,KAEvBC,EAFuB,OAGbF,oBAAS,GAHI,mBAGpCG,EAHoC,KAG3BC,EAH2B,KA+B3CC,qBAAU,WAMT,OALoBf,EAAKgB,oBAAmB,SAAAC,GAC3CL,EAAeK,GACfH,GAAW,QAIV,IAGH,IAAMI,EAAQ,CACbP,cACAQ,MAhCD,SAAeC,EAAMC,GACpB,OAAOrB,EAAKsB,2BAA2BF,EAAMC,IAgC7CE,OAtCD,SAAgBH,EAAMC,GACrB,OAAOrB,EAAKwB,+BAA+BJ,EAAMC,IAsCjDI,OA7BD,WACC,OAAOzB,EAAK0B,WA6BZC,cAzBD,SAAuBP,GACtBpB,EAAK4B,uBAAuBR,IAyB5BS,sBArBD,WACClB,EAAYkB,0BAwBb,OACC,cAAC1B,EAAY2B,SAAb,CAAsBZ,MAAOA,EAA7B,UACGL,GAAWJ,K,oBCzCDsB,MApBf,YAAyE,IAAD,IAA3CC,eAA2C,SAA1BC,EAA0B,EAA1BA,wBAA0B,EAErCvB,oBAAS,GAF4B,mBAEhEwB,EAFgE,KAErDC,EAFqD,KAKvE,OACC,sBAAK3D,UAAU,8BAAf,UACC,+CACEwD,GAAW,qIACZA,GACA,qCACC,kFACEE,GAAa,mBAAGE,QAAS,WAAOH,EAAwBE,IAA3C,0BACdD,GAAa,2E,MCEJG,MAhBf,YAAwC,IAArB5B,EAAoB,EAApBA,SAAU6B,EAAU,EAAVA,QAE3B,OACD,qBAAK9D,UAAU,uBAAf,SACC,sBAAKA,UAAU,YAAf,UACC,qBAAKA,UAAU,yBAAf,SACC,sBAAMA,UAAU,eAAe4D,QAASE,EAAxC,oBAED,qBAAK9D,UAAU,oBAAf,SACEiC,U,MC8CU8B,MAxDf,YAAyC,IAEpCC,EACAC,EAHcC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,QAO7B,OAAOD,GACN,IAAK,qBACJD,EAAa,gBACbD,EAAe,0BACVG,EAAU,oBACf,MACD,IAAK,sBACJF,EAAa,iBACbD,EAAe,+BACVG,EAAU,qBACf,MACD,IAAK,4BACJF,EAAa,uBACbD,EAAe,mCACVG,EAAU,2BACf,MACD,IAAK,sBACJF,EAAa,iBACbD,EAAe,6BACVG,EAAU,oBACf,MACD,IAAK,6BACJF,EAAa,qCACbD,EAAe,uDACdG,EAAU,oBACX,MACD,IAAK,yBACJF,EAAa,oBACbD,EAAe,4DACdG,EAAU,wBACX,MACD,QACCF,EAAa,SACbD,EAAe,wBACXG,EAAU,YAIhB,OACC,sBAAKnE,UAAWmE,EAAhB,UACC,qBAAKnE,UAAU,eACf,sBAAKA,UAAU,aAAf,UACEiE,GAAc,6BAAKA,IACnBD,GAAgB,4BAAIA,WC0DzB,SAASI,EAAT,GAAuC,IAAVN,EAAS,EAATA,QAAS,EAEiB5B,qBAFjB,mBAE7BmC,EAF6B,KAETC,EAFS,OAGcpC,oBAAS,GAHvB,mBAG7BqC,EAH6B,KAGVC,EAHU,KAK5BrB,EAAkBrB,IAAlBqB,cAL4B,SAQrBsB,IARqB,2EAQpC,sBAAAC,EAAA,+EAEUvB,EAAckB,GAFxB,OAGIG,GAAqB,GAHzB,+CAKIG,MAAM,2BALV,yDARoC,sBAkBpC,OACE,eAAC,EAAD,CAAUb,QAASA,EAAnB,UACE,gDACA,uIACA,sBAAK9D,UAAU,qBAAqB4E,SAAUH,EAA9C,UACE,sBAAKzE,UAAU,cAAf,UACE,2CACA,uBACEA,UAAU,iBACVK,KAAK,QACLE,SAAU,gBAAWmC,EAAX,EAAEmC,OAASnC,MAAX,OAAuB4B,EAAuB5B,IACxD9B,UAAQ,OAGZ,sBAAKZ,UAAU,mBAAf,WACIuE,GAAqB,wBAAQX,QAAS,kBAAMa,KAAvB,4BACtBF,GAAqB,8DAOjBO,MA5IR,WAAiB,MAEG5C,mBAAS,IAFZ,mBAEfU,EAFe,KAETmC,EAFS,OAGS7C,mBAAS,IAHlB,mBAGfW,EAHe,KAGNmC,EAHM,OAIQ9C,oBAAS,GAJjB,mBAIfG,EAJe,KAINC,EAJM,OAK0CJ,oBAAS,GALnD,mBAKf+C,EALe,KAKWC,EALX,OAMsChD,oBAAS,GAN/C,mBAMfiD,EANe,KAMSC,EANT,OAOIlD,mBAAS,IAPb,mBAOfmD,EAPe,KAORC,EAPQ,OAQwBpD,oBAAS,GARjC,mBAQfqD,EARe,KAQEC,EARF,KAUhBC,EAAUC,cAVM,EAYI5D,IAAlBa,EAZc,EAYdA,MAAOM,EAZO,EAYPA,OAZO,4CAkBtB,WAA4B0C,GAA5B,SAAAjB,EAAA,6DACEiB,EAAMC,iBACNtD,GAAW,GACX4C,GAA4B,GAC5BI,EAAS,IACTE,GAAmB,GALrB,kBAQU7C,EAAMC,EAAMC,GACjBgD,MAAK,SAACC,GACFA,EAAgBrD,KAAKsD,cACtBP,GAAmB,IAEnBN,GAA4B,GAC5BjC,QAIH+C,OAAM,SAACX,GAAWC,EAASD,EAAMY,SAlBtC,yDAmBWX,EAAS,sBAnBpB,QAqBKC,GACDE,EAAQS,KAAK,cAEf5D,GAAW,GAxBb,2DAlBsB,kEA8CtB,WAAuCqB,GAAvC,SAAAe,EAAA,+EAEU/B,EAAMC,EAAMC,GACjBgD,MAAK,SAACM,GACHA,EAAe1D,KAAKY,wBACnBwC,MAAK,WACJlC,GAAa,GACbV,OAED+C,OAAM,WACLV,EAAS,0BACTrC,UAIL+C,OAAM,SAACX,GAAWC,EAASD,EAAMY,SAftC,sDAgBSX,EAAS,sBAhBlB,yDA9CsB,sBAkEtB,OACE,sBAAKtF,UAAU,UAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,MAGF,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,WAAf,SACE,uBAAMA,UAAU,aAAa4E,SA3Ef,4CA2Ed,UACE,cAAC,EAAD,CAAqBvE,KAAK,QAAQC,KAAK,aAAaE,MAAM,QAAQD,SAAU,gBAAWmC,EAAX,EAAEmC,OAASnC,MAAX,OAAuBqC,EAASrC,MAC5G,cAAC,EAAD,CAAqBrC,KAAK,WAAWC,KAAK,aAAaE,MAAM,WAAYD,SAAU,gBAAWmC,EAAX,EAAEmC,OAASnC,MAAX,OAAuBsC,EAAYtC,MAEtH,qBAAK1C,UAAU,4BAAf,SACE,mBAAGA,UAAU,kBAAkB4D,QAAS,WAAOwB,GAA0B,IAAzE,+BAIDC,GAAS,cAAC,EAAD,CAAUnB,UAAWmB,IAC9BJ,IAA6BI,GAAS,cAAC,EAAD,CAAoB5B,wBArF/C,4CAqFiGD,SAAO,IACpH,uBAAOxD,UAAU,eAAeK,KAAK,SAASqC,MAAM,QAAQ0D,SAAU/D,IACtE,qBAAKrC,UAAU,oBAAf,SACE,cAAC,IAAD,CAAMqG,GAAG,UAAT,+BAKPlB,GAA0B,cAACf,EAAD,CAAoBN,QAAS,WAAOsB,GAA0B,U,wBC3EhFkB,MAvBf,WAAmB,IAAD,EACYxE,IAAVmB,GADF,EACXd,YADW,EACEc,QACdwC,EAAUC,cAFE,EAGQxD,mBAAS,IAHjB,mBAGJoD,GAHI,uDAKhB,sBAAAZ,EAAA,6DACEY,EAAS,IADX,kBAIUrC,IAJV,OAKIwC,EAAQS,KAAK,UALjB,gDAOIZ,EAAS,qBAPb,0DALgB,sBAgBhB,OACC,wBAAQtF,UAAU,SAAS4D,QAjBZ,2CAiBf,qBCEY2C,MApBf,WAAqB,IAAD,EACKrE,oBAAS,GADd,mBACXsE,EADW,KACNC,EADM,KAOlB,OACE,sBAAKzG,UAAU,WAAf,UACE,qBAAK4D,QANT,WACE6C,GAASD,IAKqBxG,UAAU,oBACtC,qBAAKA,UAAS,2BAAsBwG,EAAO,OAAS,UAApD,SACE,sBAAKxG,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,wBAAQ4D,QAAS,kBAAM6C,GAAQ,IAAQzG,UAAU,iBAAjD,wB,gBC6IK0G,MAzJf,WAAkB,MAESxE,qBAFT,mBAEXyE,EAFW,KAEJC,EAFI,KAGZC,GAAc,EAHF,EAIY3E,oBAAS,GAJrB,mBAIT4E,EAJS,KAIDC,EAJC,OAKW7E,oBAAS,GALpB,mBAKT8E,EALS,KAKAC,EALA,OAMkB/E,mBAAS,sBAN3B,mBAMTgF,EANS,KAMEC,EANF,KAOVC,EAAWC,cAGXC,EAAoBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,qBAI/CG,GAHWC,SAAOC,iBAGTnG,EAAKW,YAAYyF,KAC1BC,EAAQpG,EAAGqG,IAAI,SAAWL,GAfhB,4CAmBhB,WAAmCM,GAAnC,iBAAArD,EAAA,6DACQsD,EAAgB,IAAIC,SAAQ,SAACC,GACjCL,EAAMM,GAAG,SAAS,SAACC,GACnB,IAAMC,EAAUD,EAASE,MACzBJ,EAAWG,EAAQH,kBAJvB,SAO6BF,EAP7B,OAOMO,EAPN,OASEnB,EAAS,CAAC/G,KAAM,2BAA4B6H,WAAaK,IACzD3B,EAAU2B,GAGVR,IAbF,4CAnBgB,sBA2ChB,SAASS,IACP,IAAIC,EAAc,EACdC,EAAa,EAUjB,OARApB,EAAkBqB,SAAQ,SAAAC,GACL,QAAfA,EAAMvI,KACRoI,GAAeG,EAAMC,OAErBH,GAAcE,EAAMC,UAIjBlC,EAAS+B,EAAaD,EAoB/B,SAASK,IACP,IAAIhC,EAAQ,CACV,GAAe,IAAXH,GAA2B,KAAXA,QAA4BoC,IAAXpC,EAInC,OAAO,EAHPQ,EAAa,kBACbF,GAAQ,IAgDd,SAAS+B,IACPpC,IACAG,GAAU,GACVE,GAAQ,GAKT,OAnGD1E,qBAAU,WACJuE,GArCU,oCAsCZmC,CAAoBH,MAkGrB,sBAAK9I,UAAS,2BAAsBgH,EAAU,QAAU,aAAxD,UACA,wBAAQhH,UAAU,cAAc4D,QAAS,kBAAMoF,KAA/C,kBACG,uBAAMhJ,UAAS,sCAAiCgH,EAAU,QAAU,aAAepC,SAlBzF,SAAoBe,GAClBA,EAAMC,iBACNqB,GAAQ,GA/DV,WAIE,GAHAF,GAAU,GAGPmC,MAAMvC,GAEP,OADAhC,MAAM,0BACC,EAGPlD,EAAGqG,IAAI,SAAWL,GAAQ0B,OAAO,CAC/BjB,WAAYkB,WAAWzC,KAsD3B0C,IAe4GC,KAAKC,MAA7G,UACE,uBAAOC,KAAK,SAASnJ,KAAK,OAAOL,UAAU,SAAS0C,MAnDvDoE,OACD,EAEiB,IAAXH,GAA2B,KAAXA,QAA4BoC,IAAXpC,EAC9B6B,IAAiBiB,QAAQ,GAAK,UAE9B9C,EA6CoEhG,OAAQ,gBAAW+B,EAAX,EAAEmC,OAASnC,MAAX,OAAuBkE,EAAUlE,IAAQ9B,UAAQ,IAClI,wBAAQP,KAAK,SAASL,UAAU,cAAhC,kBACA,sBAAMA,UAAU,eAAhB,SAAgCkH,IAChC,sBAAKlH,UAAU,iBAAf,UACE,uBAAO0C,MA3CjB,WACE,GAAe,IAAXiE,GAA2B,KAAXA,QAA4BoC,IAAXpC,EAAsB,CACzD,IAAM+C,EAAalB,IACnB,OAAIkB,EAAa/C,GACfE,GAAc,EACP,MAAQ6C,EAAa/C,GAAQ8C,QAAQ,IACjC9C,EAAS+C,GACpB7C,GAAc,EACP,MAAQF,EAAS+C,GAAYD,QAAQ,KAE1C5C,GAAc,EACP,GAIX,OAAOF,EA4BagD,GAAmB3J,UAAS,sBAAiB6G,EAAc,aAAe,cACxF,sBAAM7G,UAAU,eAAhB,6CAGJ,wBAAQ4D,QAAS,kBAAMoF,KAAvB,sB,MCjEOY,MAlFf,WAEE,IAAIC,EAAO,IAAIC,KAGXC,EAFKC,OAAOH,EAAKI,WAAa,GAAGC,SAAS,EAAG,KACtCL,EAAKM,cAIV1C,EAASjG,EAAKW,YAAYyF,IAC1BC,EAAQpG,EAAGqG,IAAI,SAAWL,EAAS,aAAesC,GAClD3C,EAAWC,cAGXC,EAAoBC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,qBAbpB,EAcGpF,oBAAS,GAdZ,mBAc1BkI,EAd0B,KAcbC,EAda,OAeNnI,mBAAS,IAfH,mBAelBoI,GAfkB,WAkDjC,OATA/H,qBAAU,YAvBV,SAAuC6E,GACrC,IAAKmD,EAAe,GAEpB1C,EAAMM,GAAG,SAAS,SAACC,GACjB,IAAMC,EAAUD,EAASE,MAET,OAAZD,GAAgC,KAAZA,GAA8B,IAAZA,GACxCmC,OAAOC,KAAKpC,GAASM,SAAQ,SAAS+B,GACpCH,EAAarE,KAAKmC,EAAQqC,OAG5BtD,EAAS,CAAC/G,KAAM,gCAAiCsK,KAAOJ,IAExDA,EAAe,GACfF,GAAa,IAGbA,GAAa,MAOjBO,CAA8BxD,GAE9ByD,YAAW,WACTP,EAAS,aACR,OACF,CAAClD,IAIF,sBAAKpH,UAAU,iBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,aAAf,oBACA,qBAAKA,UAAU,aAAf,yBACA,qBAAKA,UAAU,aAAf,kBACA,qBAAKA,UAAU,aAAf,wBAEAoK,EACA,+CAEA9C,EAAkBwD,KAAI,SAAClC,GAAD,OACpB,sBAAoB5I,UAAU,kBAA9B,UACE,qBAAKA,UAAS,qCAA+C,QAAf4I,EAAMvI,KAAiB,UAAY,UAAjF,SACkB,QAAfuI,EAAMvI,KAAiB,KAAOuI,EAAMC,OAAOY,QAAQ,GAAK,KAAOb,EAAMC,OAAOY,QAAQ,KAEvF,qBAAKzJ,UAAU,kCAAf,SACG4I,EAAMmC,cAET,qBAAK/K,UAAU,2BAAf,SACG4I,EAAMiB,OAET,qBAAK7J,UAAU,iCAAf,SACG4I,EAAMoC,UAAUC,eAXXrC,EAAMsC,W,MCsBXC,MArFf,WAA6B,MAGOjJ,mBAAS,IAHhB,mBAGpBgF,EAHoB,KAGTC,EAHS,OAIejF,oBAAS,GAJxB,mBAIpBkJ,EAJoB,KAIIC,EAJJ,OAKKnJ,oBAAS,GALd,mBAKpBoJ,EALoB,KAKTC,EALS,OAMCrJ,mBAAS,IANV,mBAMpB2G,EANoB,KAMZ2C,EANY,OAOWtJ,mBAAS,IAPpB,mBAOpB6I,EAPoB,KAOPU,EAPO,OAQEvJ,mBAAS,IARX,mBAQpBwJ,EARoB,KAQTC,EARS,KAUrBlE,EAASjG,EAAKW,YAAYyF,IAG5BiC,EAAO,IAAIC,KACX8B,EAAK5B,OAAOH,EAAKgC,WAAW3B,SAAS,EAAG,KACxC4B,EAAK9B,OAAOH,EAAKI,WAAa,GAAGC,SAAS,EAAG,KAC7C6B,EAAOlC,EAAKM,cACZ6B,EAAKnC,EAAKoC,WACVC,EAAMrC,EAAKsC,aACXC,EAAKvC,EAAKwC,aACVC,EAAKzC,EAAK0C,kBACd1C,EAAO+B,EAAK,IAAME,EAAK,IAAMC,EAE7B,IAAIS,EAASZ,EAAKE,EAAKC,EAAOC,EAAKE,EAAME,EAAKE,EAC1CvC,EAAmB+B,EAAKC,EAGtBlE,EAAQpG,EAAGqG,IAAI,SAAWL,EAAS,aAAesC,EAAmB,IAAMyC,GAE3EC,EAAa,SAACC,EAAerM,GACjCsL,EAAQtL,GACR8G,EAAauF,GACbrB,GAAQ,IAkBV,OACE,sBAAKrL,UAAU,0CAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,wBAAQA,UAAU,0BAA0B4D,QAAS,kBAAM6I,EAAW,8BAA+B,YAEvG,qBAAKzM,UAAU,cAAf,SACE,wBAAQA,UAAU,qBAAqB4D,QAAS,kBAAM6I,EAAW,yBAA0B,YAE7F,qBAAKzM,UAAS,qCAAgCoL,EAAyB,8BAAgC,+BAAvG,SACE,sBAAKpL,UAAU,+BAAf,UACE,sBAAMA,UAAU,eAAhB,oCACA,wBAAQA,UAAU,QAAQ4D,QAAS,kBAAMyH,GAAQ,IAAjD,eACA,sBAAKrL,UAAU,iBAAf,UACE,gCACE,uBAAOK,KAAK,OAAOL,UAAU,QAAQO,SAAU,gBAAWmC,EAAX,EAAEmC,OAASnC,MAAX,OAAuB8I,EAAU9I,IAAQ9B,UAAQ,IAChG,sBAAMZ,UAAU,iBAAhB,uBAEF,gCACE,uBAAOK,KAAK,OAAOL,UAAU,cAAcO,SAAU,gBAAWmC,EAAX,EAAEmC,OAASnC,MAAX,OAAuB+I,EAAe/I,IAAQ9B,UAAQ,IAC3G,sBAAMZ,UAAU,iBAAhB,+BAGJ,uBAAO2M,eAAgBrB,EAAW/K,SAAU,kBAAMgL,GAAYD,IAAYjL,KAAK,WAAWL,UAAU,aACpG,uBAAO4M,QAAQ,WAAf,SACG1F,IAEH,qBAAKlH,UAAU,iBAAf,SACE,wBAAQ4D,QAAS,kBAxCzBiE,EAAMgF,IAAI,CACRxM,KAAMqL,EACN7C,OAAQO,WAAWP,GACnBkC,YAAaA,EACbC,UAAWM,EACXzB,KAAMA,EACNqB,GAAIsB,SAGNnB,GAAQ,IA+BgDrL,UAAU,OAA1D,6BCjCG8M,MAtCf,WAAsB,IAAD,EACU5K,mBAAS,SADnB,mBACb6K,EADa,KACHC,EADG,KAQnB,OACE,sBAAKhN,UAAS,gCAA2B+M,EAAW,SAAW,UAA/D,UACE,qBAAK/M,UAAS,yBAAoB+M,EAAW,SAAW,UAAxD,SACE,sBAAK/M,UAAU,YAAf,UACE,sBAAKA,UAAU,cAAc4D,QAThB,WACnBoJ,GAAWD,IAQL,UACE,yBACA,yBACA,4BAEJ,sBAAK/M,UAAU,kBAAf,UACE,cAAC,IAAD,CAASiN,gBAAgB,SAAS5G,GAAG,aAArC,eACA,cAAC,IAAD,CAAS4G,gBAAgB,SAAS5G,GAAG,WAArC,kBAEA,cAAC,EAAD,SAGJ,sBAAKrG,UAAU,eAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,c,YCiDKkN,MAnFf,WAAoB,IAAD,EAEmBhL,mBAAS,GAF5B,mBAEViL,EAFU,KAEEC,EAFF,OAGiClL,mBAAS,GAH1C,mBAGVmL,EAHU,KAGSC,EAHT,OAIepL,mBAAS,IAJxB,mBAIVqL,EAJU,KAIAC,EAJA,OAKgBtL,oBAAS,GALzB,mBAKVuL,EALU,KAKKpC,EALL,KAQX5D,EAASjG,EAAKW,YAAYyF,IAC5BiC,EAAO,IAAIC,KACX8B,EAAK5B,OAAOH,EAAKgC,WAAW3B,SAAS,EAAG,KACxC4B,EAAK9B,OAAOH,EAAKI,WAAa,GAAGC,SAAS,EAAG,KAC7C6B,EAAOlC,EAAKM,cACZ6B,EAAKnC,EAAKoC,WACVC,EAAMrC,EAAKsC,aACXC,EAAKvC,EAAKwC,aACVC,EAAKzC,EAAK0C,kBACd1C,EAAO+B,EAAK,IAAME,EAAK,IAAMC,EAE7B,IAAIS,EAASZ,EAAKE,EAAKC,EAAOC,EAAKE,EAAME,EAAKE,EAC1CvC,EAAmB+B,EAAKC,EAGtB2B,EAAajM,EAAGqG,IAAI,SAAWL,EAAS,UAAY+E,GACpDmB,EAAgBlM,EAAGqG,IAAI,SAAWL,EAAS,aAAesC,EAAmB,IAAMyC,GAGzF,SAASoB,IACPF,EAAWb,IAAI,CACbU,SAAUA,EACVJ,WAAY/D,WAAW+D,GACvBE,kBAAmBA,EACnBxD,KAAMA,EACNqB,GAAIsB,IAQNmB,EAAcd,IAAI,CAChBxM,KAAM,MACNwI,OAAQO,WAAWiE,GACnBtC,YAAawC,EACbvC,WAAW,EACXnB,KAAMA,EACNqB,GAAIsB,IAXNnB,GAAQ,GAeV,OACE,sBAAKrL,UAAU,gCAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,wBAAQA,UAAU,kBAAkB4D,QAAS,kBAAMyH,GAAQ,IAA3D,0BAEF,qBAAKrL,UAAS,2BAAsByN,EAAgB,oBAAsB,qBAA1E,SACE,sBAAKzN,UAAU,qBAAf,UACE,sBAAMA,UAAU,eAAhB,sBACA,wBAAQA,UAAU,QAAQ4D,QAAS,kBAAMyH,GAAQ,IAAjD,eACA,sBAAKrL,UAAU,iBAAf,UACE,gCACE,uBAAOK,KAAK,OAAOL,UAAU,mBAAmBO,SAAU,gBAAWmC,EAAX,EAAEmC,OAASnC,MAAX,OAAuB8K,EAAY9K,IAAQ9B,UAAQ,IAC7G,sBAAMZ,UAAU,iBAAhB,0BAEF,gCACE,uBAAOK,KAAK,OAAOL,UAAU,aAAaO,SAAU,gBAAWmC,EAAX,EAAEmC,OAASnC,MAAX,OAAuB0K,EAAc1K,IAAQ9B,UAAQ,IACzG,sBAAMZ,UAAU,iBAAhB,4BAEF,gCACE,uBAAOK,KAAK,OAAOL,UAAU,gBAAgBO,SAAU,gBAAWmC,EAAX,EAAEmC,OAASnC,MAAX,OAAuB4K,EAAqB5K,IAAQ9B,UAAQ,IACnH,sBAAMZ,UAAU,iBAAhB,kCAGJ,qBAAKA,UAAU,iBAAf,SACE,wBAAQ4D,QAAS,kBAAMgK,KAAc5N,UAAU,OAA/C,6B,MCMK6N,MAlFjB,WAAkB,IAAD,EACe3L,qBADf,mBACV4L,EADU,KACAC,EADA,OAEqB7L,oBAAS,GAF9B,mBAERkI,EAFQ,KAEKC,EAFL,KAGT5C,EAASjG,EAAKW,YAAYyF,IAC1BR,EAAWC,cACXa,EAAaX,aAAY,SAAAC,GAAK,OAAIA,EAAMU,cAExCL,EAAQpG,EAAGqG,IAAI,SAAWL,EAAS,WAgCzCuG,QAAQC,IAAI/F,GAvCG,MAwCYhG,mBAAS,IAxCrB,mBAwCAoI,GAxCA,WAiDf,OAPA/H,qBAAU,YAjCV,SAA2B6E,GACzB,IAAI0G,EAAW,GACfjG,EAAMM,GAAG,SAAS,SAACC,GACjB,IAAMC,EAAUD,EAASE,MACzB0F,QAAQC,IAAI5F,QAEIU,IAAZV,GAAqC,KAAZA,GAA8B,IAAZA,GAA6B,OAAZA,GAC9D2F,QAAQC,IAAI,wBACZzD,OAAOC,KAAKpC,GAASM,SAAQ,SAAS+B,GACpCoD,EAAS5H,KAAKmC,EAAQqC,IACtBsD,QAAQC,IAAIH,MAGd1G,EAAS,CAAC/G,KAAM,yBAA0BsK,KAAOmD,IACjDC,EAAYD,GACZA,EAAW,GACXzD,GAAa,GACb2D,QAAQC,IAAI7D,KAGZC,GAAa,GACb2D,QAAQC,IAAI/F,OAahBgG,CAAkB9G,GAClByD,YAAW,WACTP,EAAS,aACR,OACF,CAAClD,IAGF,qBAAKpH,UAAU,gBAAf,SACIoK,EACA,+CAEA0D,EAAShD,KAAI,SAAClC,GAAD,OACX,sBAAoB5I,UAAU,OAA9B,UACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,uBACE4I,EAAM2E,YAEV,sBAAKvN,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,kBACC4I,EAAMuE,WAFT,aAIA,sBAAKnN,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,0BACC4I,EAAMyE,kBAFT,aAIA,sBAAKrN,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,8BAlCemN,EAmCIvE,EAAMuE,WAnCEE,EAmCUzE,EAAMyE,kBAlC9Cc,SAAShB,EAAaE,IAgCrB,gBAIA,sBAAKrN,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,oBACC4I,EAAMiB,UAnBDjB,EAAMsC,IApBxB,IAA2BiC,EAAYE,QCA1Be,MAhCf,WAAoB,IAAD,EACYlM,mBAAS,SADrB,mBACX6K,EADW,KACDC,EADC,KAOjB,OACD,sBAAKhN,UAAS,uCAAkC+M,EAAW,SAAW,UAAtE,UACC,qBAAK/M,UAAS,yBAAoB+M,EAAW,SAAW,UAAxD,SACM,sBAAK/M,UAAU,YAAf,UACE,sBAAKA,UAAU,cAAc4D,QARhB,WACnBoJ,GAAWD,IAOL,UACI,yBACA,yBACA,4BAEJ,sBAAK/M,UAAU,kBAAf,UACE,cAAC,IAAD,CAASiN,gBAAgB,SAAS5G,GAAG,aAArC,eACA,cAAC,IAAD,CAAS4G,gBAAgB,SAAS5G,GAAG,WAArC,kBAEF,cAAC,EAAD,SAGR,sBAAKrG,UAAU,eAAf,UACE,cAAC,EAAD,IACE,cAAC,EAAD,IACA,cAAC,EAAD,WCpCAqO,G,MAA6B,IAAIC,OAAO,cACxCC,EAAiC,IAAID,OAAO,6CAAwC,KACpFE,EAAkC,IAAIF,OAAO,qBAC7CG,EAAuB,IAAIH,OAAO,SAsBzBI,EAnBU,SAAC7L,EAAU8L,GAClC,OAAG9L,IAAa8L,MAGZN,EAA2BO,KAAK/L,OAGhC0L,EAA+BK,KAAK/L,OAGpC2L,EAAgCI,KAAK/L,MAGrC4L,EAAqBG,KAAK/L,OCwGjBgM,EA/GA,WAAM,MAEO3M,mBAAS,IAFhB,mBAEZU,EAFY,KAELmC,EAFK,OAGa7C,mBAAS,IAHtB,mBAGZW,EAHY,KAGFmC,EAHE,OAIqC9C,mBAAS,IAJ9C,mBAIZyM,EAJY,KAIUG,EAJV,OAKW5M,oBAAS,GALpB,mBAKZG,EALY,KAKHC,EALG,OAMkBJ,oBAAS,GAN3B,mBAMZ6M,EANY,KAMO1D,EANP,OAO6CnJ,oBAAS,GAPtD,mBAOZ+C,EAPY,KAOcC,EAPd,OAQOhD,mBAAS,IARhB,mBAQZmD,EARY,KAQLC,EARK,OAUQxD,IAAnBiB,EAVW,EAUXA,OAAQE,EAVG,EAUHA,OAVG,SAaJ+L,EAbI,8EAanB,WAAmCpH,GAAnC,SAAAlD,EAAA,sDACEjD,EAAGqG,IAAI,SAAWF,GAAKiF,IAAI,CACzB3E,WAAa,EACbvB,OAAS,EACTsI,SAAW,GACXC,MAAO,GACPC,QAAS,KACRtJ,MAAK,WACN5C,OACC+C,OAAM,SAACX,GACRV,MAAMU,MAVV,4CAbmB,sBA4BnB,SAAS+J,IACP,OAAIxM,IAIAC,KAGA8L,GANFrJ,EAAS,uBACF,GA/BQ,4CA4CnB,WAA4BK,GAA5B,eAAAjB,EAAA,yDACEiB,EAAMC,iBACNN,EAAS,IACL+J,GAAkB,EAElBD,MACF9J,EAAS,uBACT+J,GAAkB,IAEhBX,EAAiB7L,EAAS8L,IAAyBU,IACrD/J,EAAS,8BACT+J,GAAkB,IAGhBA,EAdN,iCAgBM/M,GAAW,GAhBjB,UAiBYS,EAAOH,EAAMC,GAClBgD,MAAK,SAACM,GACLA,EAAe1D,KAAKY,wBACpB2L,EAAoB7I,EAAe1D,KAAKmF,KACxC1C,GAA4B,MAE7Bc,OAAM,SAAAX,GAAK,OAAIC,EAASD,EAAMY,SAvBrC,0DAwBaX,EAAS,sBAxBtB,QAyBIhD,GAAW,GAzBf,2DA5CmB,sBA0EnB,OACE,sBAAKtC,UAAU,UAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,WAAf,SACE,uBAAMA,UAAU,cAAc4E,SAlFnB,4CAkFX,UACE,cAAC,EAAD,CAAqBvE,KAAK,QAAQC,KAAK,cAAcE,MAAM,QAAQD,SAAU,gBAAWmC,EAAX,EAAEmC,OAASnC,MAAX,OAAuBqC,EAASrC,MAC7G,cAAC,EAAD,CAAqBrC,KAAK,WAAWC,KAAK,cAAcE,MAAM,WAAWE,QAAS,kBAAM2K,GAAQ,IAAO1K,OAAQ,kBAAM0K,GAAQ,IAAQ9K,SAAU,gBAAWmC,EAAX,EAAEmC,OAASnC,MAAX,OAAuBsC,EAAYtC,MAElL,sBAAK1C,UAAS,mCAA8B+O,EAAoB,oBAAsB,qBAAtF,UACE,sEACA,+BACE,6CACA,wDACA,4CACA,4DAGJ,cAAC,EAAD,CAAqB1O,KAAK,UAAUC,KAAK,cAAcE,MAAM,mBAAmBD,SAAU,gBAAWmC,EAAX,EAAEmC,OAASnC,MAAX,OAAuBoM,EAAwBpM,MAExI2C,GAAS,cAAC,EAAD,CAAUnB,UAAWmB,EAAOlB,QAASkB,IAC9CJ,IAA6BI,GAAS,cAAC,EAAD,IAEvC,uBAAOrF,UAAU,gBAAgBK,KAAK,SAASqC,MAAM,UAAU0D,SAAU/D,IACzE,qBAAKrC,UAAU,oBAAf,SACE,cAAC,IAAD,CAAMqG,GAAG,oBAAT,iC,wBC7GC,SAASiJ,EAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,6BAE9DtN,EAAgBL,IAAhBK,YAEJuN,IAA4BvN,GAAcA,EAAY4D,cAI1D,OACE,cAAC,IAAD,2BACM0J,GADN,IAEEE,OAAQ,SAAAC,GACN,OAAOF,EAA4B,cAACH,EAAD,eAAeK,IAAY,cAAC,IAAD,CAAUvJ,GAAG,eCZpE,SAASiJ,EAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,6BAE9DtN,EAAgBL,IAAhBK,YAEJuN,IAA4BvN,GAAcA,EAAY4D,cAI1D,OACE,cAAC,IAAD,2BACM0J,GADN,IAEEE,OAAQ,SAAAC,GACN,OAAOF,EAA4B,cAAC,IAAD,CAAUrJ,GAAG,eAAkB,cAACkJ,EAAD,eAAeK,Q,4BCbnFC,EAAmBC,yBAGnBC,EAAe,CACnBzI,kBAAmB,GACnBwG,SAAU,GACV5F,WAAY,GAkCd,SAAS8H,EAAgBxI,EAAOmD,GAC/B,IAAIsF,EAAuB,YAAOzI,EAAMF,mBAKvC,OAHA2I,EAA0BtF,EAC1BnD,EAAMF,kBAAoB2I,EAEnBzI,EAIT,SAAS0I,GAAgB1I,EAAOoB,GAC9B,IAAIqH,EAAuB,YAAOzI,EAAMF,mBAKxC,OAHA2I,EAAwB/J,KAAK0C,GAC7BpB,EAAMF,kBAAoB2I,EAEnBzI,EAIT,SAAS2I,GAAmB3I,EAAO4I,GACjC,IAAIH,EAAuB,YAAOzI,EAAMF,mBAClC+I,EA0BR,SAA4B7I,EAAO4I,GACjC,OAAO5I,EAAMF,kBAAkBgJ,WAAU,SAAA1H,GAAK,OAAIA,EAAMsC,KAAOkF,KA3BtCG,CAAmB/I,EAAO4I,GAKjD,OAHFH,EAAwBO,OAAOH,EAAkB,GAC/C7I,EAAMF,kBAAoB2I,EAEnBzI,EAIX,SAASiJ,GAAcjJ,EAAOmD,GAC5B,IAAI+F,EAAc,YAAOlJ,EAAMsG,UAK9B,OAHD4C,EAAiB/F,EAChBnD,EAAMsG,SAAW4C,EAEVlJ,EAGT,SAASmJ,GAAcnJ,EAAOU,GAE5B,OAAO,2BACFV,GADL,IAEEU,WAAYA,IAQF0I,OAlFDC,aASd,WAAoD,IAA/BrJ,EAA8B,uDAAtBuI,EAAce,EAAQ,uCACjD,OAAQA,EAAOzQ,MACb,IAAK,sBACD,OAAO6P,GAAgB1I,GAC3B,IAAK,yBACD,OAAO2I,GAAmB3I,EAAOsJ,EAAO5F,IAC5C,IAAK,gCAED,OADF8C,QAAQC,IAAI,QACH+B,EAAgBxI,EAAOsJ,EAAOnG,MACzC,IAAK,sBACD,OAAO8F,GAAcjJ,EAAOsJ,EAAOnG,MACvC,IAAK,2BAED,OADAqD,QAAQC,IAAI,cACL0C,GAAcnJ,EAAOsJ,EAAO5I,YACvC,QAEI,OADA8F,QAAQ+C,KAAK,oBAAqBD,GAC3BtJ,KAvBXwJ,YACEnB,GAEFoB,OAAOC,8BAAgCD,OAAOC,gCCG9CC,GAA0B,IAArBF,OAAOG,YAChBC,SAASC,gBAAgB7Q,MAAM8Q,YAAY,OAA3C,UAAsDJ,GAAtD,OAEA,IAAMK,GAAcH,SAASI,eAAe,SAAWJ,SAASK,cAAc,OAG9EC,IAAShC,OACR,cAAC,IAAD,CAAQiC,SAAS,cAAjB,SACC,cAAC,EAAD,UACC,cAAC,IAAD,CAAUhB,MAAOA,GAAjB,SACC,eAAC,IAAD,WACC,cAAC,EAAD,CAAsBiB,OAAK,EAACC,KAAK,SAAStC,UAAW1K,IACrD,cAAC,EAAD,CAAsB+M,OAAK,EAACC,KAAK,UAAUtC,UAAWX,IACtD,cAACS,EAAD,CAAcwC,KAAK,aAAatC,UAAW1C,IAC3C,cAACwC,EAAD,CAAcwC,KAAK,WAAWtC,UAAWpB,IACzC,cAACkB,EAAD,CAAcwC,KAAK,IAAnB,SAAuB,cAAC,IAAD,CAAUzL,GAAG,0BAKxCmL,M","file":"static/js/main.b556d588.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/piggy-bank-euro.0201ba45.svg\";","import logo from '../asset/images/piggy-bank-euro.svg';\r\nimport '../scss/logo.scss';\r\n\r\n// Render logo in components\r\nfunction Logo() {\r\n  return (\r\n    <div className=\"logo-box\">\r\n\t  <div className=\"logo-img-box\">\r\n\t    <img className=\"logo-svg\" src={logo} alt=\"piggy bank\"/>\r\n\t  </div>\r\n\t  <div className=\"logo-text\">\r\n\t    <h1 className=\"app-name\">\r\n\t      Budgetary\r\n\t    </h1>\r\n\t    <h3 className=\"slogan-text\">\r\n\t      Keep track of your Finances\r\n\t    </h3>\r\n\t  </div>\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default Logo;","import '../scss/authenticationInput.scss';\r\n\r\n// creates input (text & password) field used on authentication pages\r\nconst AuthenticationInput = ({type, form, onChange, label, style, onFocus, onBlur}) => {\r\n\treturn (\r\n\t\t<div className=\"input-box\" style={style}>\r\n\t\t\t{type === \"password\" && \r\n\t\t\t\t<>\r\n\t\t\t\t\t<span className=\"material-icons lock-icon\">lock</span>\r\n\t\t\t\t\t<input className=\"password-input\" type=\"password\" form={form} onChange={onChange} onFocus={onFocus} onBlur={onBlur} required/>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\t{type  === \"email\" && \r\n\t\t\t\t<>\r\n\t\t\t\t\t<span className=\"material-icons user-icon\">person</span>\r\n\t\t\t\t\t<input className=\"username-input\" type=\"text\" form={form} onChange={onChange} required/>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n      \t\t{type  === \"confirm\" && \r\n\t\t\t\t<>\r\n\t\t\t\t\t<span className=\"material-icons lock-icon\">lock</span>\r\n\t\t\t\t\t<input className=\"password-input confirm\" type=\"password\" form={form} onChange={onChange} onFocus={onFocus} onBlur={onBlur} required/>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t\t<span className=\"floating-label\">{label}</span>\r\n\t\t</div>\r\n\t)\r\n}\r\n  \r\nexport default AuthenticationInput;","import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/database\"\r\nimport \"firebase/analytics\"\r\n\r\n// Firebase configuration to work in other components\r\nvar firebaseConfig = {\r\n\tapiKey: \"AIzaSyDFfBHJPnormfyFlRSbdM360FsUWgbKt3Y\",\r\n\tauthDomain: \"btary-app.firebaseapp.com\",\r\n\tdatabaseURL: \"https://btary-app-default-rtdb.europe-west1.firebasedatabase.app/\",\r\n\tprojectId: \"btary-app\",\r\n\tstorageBucket: \"btary-app.appspot.com\",\r\n\tmessagingSenderId: \"898811137304\",\r\n\tappId: \"1:898811137304:web:abcfec0e9fe36676e7e26d\",\r\n\tmeasurementId: \"G-FHSCTD4XJ8\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\n\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.database();\r\nexport default firebase\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { auth } from '../src/firebase/firebase';\r\n\r\n// creates authentication context\r\nconst AuthContext = React.createContext()\r\n\r\n// method for accessing authentication context\r\nexport const useAuth = () => {\r\n\treturn useContext(AuthContext)\r\n}\r\n\r\n// creating authentication context provider (component authentication context)\r\nexport const AuthProvider = ({children}) => {\r\n\t// creates states for context\r\n\tconst [currentUser, setCurrentUser] = useState();\r\n\tconst [loading, setLoading] = useState(true);\r\n\r\n\t// uses firebase authentication to signup user with email and password\r\n\tfunction signup(email,password) {\r\n\t\treturn auth.createUserWithEmailAndPassword(email,password)\r\n\t}\r\n\r\n\t// uses firebase authentication to login user with email and password\r\n\tfunction login(email,password) {\r\n\t\treturn auth.signInWithEmailAndPassword(email,password)\r\n\t}\r\n\r\n\t// uses firebase authentication to logout user\r\n\tfunction logout(){\r\n\t\treturn auth.signOut()\r\n\t}\r\n\r\n\t// uses firebase authentication to send a password-reset email to address\r\n\tfunction resetPassword(email){\r\n\t\tauth.sendPasswordResetEmail(email)\r\n\t}\r\n\r\n\t// uses firebase authentication to send verification-email to address\r\n\tfunction sendEmailVerification(){\r\n\t\tcurrentUser.sendEmailVerification()\r\n\t}\r\n\r\n\t// updates the currentUser on every render\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = auth.onAuthStateChanged(user => {\r\n\t\t\tsetCurrentUser(user)\r\n\t\t\tsetLoading(false)\r\n\t\t})\r\n\r\n\t\treturn unsubscribe\r\n\t}, [])\r\n\r\n\t// sums up all methods and attributes provided by context\r\n\tconst value = {\r\n\t\tcurrentUser,\r\n\t\tlogin,\r\n\t\tsignup,\r\n\t\tlogout,\r\n\t\tresetPassword,\r\n\t\tsendEmailVerification\r\n\t}\r\n\r\n\t// render component\r\n\treturn (\r\n\t\t<AuthContext.Provider value={value}>\r\n\t\t\t{!loading && children}\r\n\t\t</AuthContext.Provider>\r\n\t)\r\n}","import React, { useState } from 'react'\r\nimport '../scss/verifyEmailInfoBox.scss'\r\n\r\n// info-box reminding user to verify email and offering them to resend verification mail\r\nfunction VerifyEmailInfoBox({onLogin = false, resendVerificationEmail}) {\t\r\n\t// creating state for component\r\n\tconst [emailSend, setEmailSend] = useState(false)\r\n\r\n\t// render component\r\n\treturn (\r\n\t\t<div className=\"email-verification-info-box\">\r\n\t\t\t<h3>Verify Email</h3>\r\n\t\t\t{!onLogin && <p>We have send you an email to verify your address. You must verify your email before using budgetary.</p>}\r\n\t\t\t{onLogin && \r\n\t\t\t\t<>\r\n\t\t\t\t\t<p>Please verify your email before using budgetary.</p> \r\n\t\t\t\t\t{!emailSend && <u onClick={() => {resendVerificationEmail(setEmailSend)}}>Resend Email</u>}\r\n\t\t\t\t\t{emailSend && <p>Verification Email has been resend.</p>}\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n   \r\nexport default VerifyEmailInfoBox;","import '../scss/modalbox.scss';\r\n\r\n// basic modalbox blueprint for creating individual modalboxes\r\nfunction ModalBox({children, onClose}) {\r\n\t \r\n  return (\r\n\t<div className=\"modal-box-background\">\r\n\t\t<div className=\"modal-box\">\r\n\t\t\t<div className=\"close-button-container\">\r\n\t\t\t\t<span className=\"close-button\" onClick={onClose}>&times;</span>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"modal-box-content\">\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default ModalBox;","import '../scss/errorBox.scss'\r\n\r\nfunction ErrorBox({errorCode, styling}) {\r\n\r\n\tvar errorMessage;\r\n\tvar errorTitle;\r\n  \tvar styling;\r\n\r\n\t// setting the title, message and styling for the error-box depending on type of error\r\n\tswitch(errorCode){\r\n\t\tcase \"auth/invalid-email\":\r\n\t\t\terrorTitle = \"Invalid Email\"\r\n\t\t\terrorMessage = \"The email is not valid.\"\r\n      \t\tstyling = \"invalid-email-box\"\r\n\t\t\tbreak;\r\n\t\tcase \"auth/wrong-password\":\r\n\t\t\terrorTitle = \"Wrong Password\"\r\n\t\t\terrorMessage = \"The password is not correct.\"\r\n      \t\tstyling = \"wrong-password-box\"\r\n\t\t\tbreak;\r\n\t\tcase \"auth/email-already-in-use\":\r\n\t\t\terrorTitle = \"Email already in use\"\r\n\t\t\terrorMessage = \"The email is already registered.\"\r\n      \t\tstyling = \"email-already-exists-box\"\r\n\t\t\tbreak;\r\n\t\tcase \"auth/missing-fields\":\r\n\t\t\terrorTitle = \"Fields missing\"\r\n\t\t\terrorMessage = \"Not all fields are filled.\"\r\n      \t\tstyling = \"fiels-missing-box\"\r\n\t\t\tbreak;\r\n\t\tcase \"auth/password-insufficient\":\r\n\t\t\terrorTitle = \"Password doesn't meet requirements\"\r\n\t\t\terrorMessage = \"Your password doesn't meet the minimum requirements.\"\r\n\t\t\t\tstyling = \"password-weak-box\"\r\n\t\t\tbreak;\r\n\t\tcase \"auth/too-many-attempts\":\r\n\t\t\terrorTitle = \"Too many attempts\"\r\n\t\t\terrorMessage = \"Please wait before trying to resend the verification mail\"\r\n\t\t\t\tstyling = \"too-many-attempts-box\"\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\terrorTitle = \"Error!\"\r\n\t\t\terrorMessage = \"Something went wrong.\"\r\n     \t\tstyling = \"error-box\"\r\n\t}\r\n\r\n\t// render error-box\r\n\treturn (\r\n\t\t<div className={styling}>\r\n\t\t\t<div className=\"error-icon\"></div>\r\n\t\t\t<div className=\"error-text\">\r\n\t\t\t\t{errorTitle && <h3>{errorTitle}</h3>}\r\n\t\t\t\t{errorMessage && <p>{errorMessage}</p>}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n   \r\nexport default ErrorBox;","import '../scss/login.scss';\r\nimport Logo from '../components/logo.js';\r\nimport AuthenticationInput from '../components/AuthenticationInput';\r\nimport { useState } from 'react';\r\nimport { useAuth } from '../AuthContext';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport VerifyEmailInfoBox from '../components/VerifyEmailInfoBox';\r\nimport ModalBox from '../components/ModalBox';\r\nimport ErrorBox from '../components/ErrorBox';\r\n\r\n// login react-component\r\nexport function Login() {\r\n  // creates states for login-component\r\n  const [email,setEmail] = useState(\"\")\r\n  const [password,setPassword] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [showEmailVerificationBox, setShowEmailVerificationBox] = useState(false)\r\n  const [showPasswordResetModal, setShowPasswordResetModal] = useState(false)\r\n  const [error, setError] = useState(\"\")\r\n  const [canBeRedirected, setCanBeRedirected] = useState(false)\r\n  // accessing useHistory-hook \r\n  const history = useHistory()\r\n  // accessing login and logout methods from AuthContext\r\n  const { login, logout } = useAuth()\r\n\r\n  // log user in and then...\r\n  // ..redirecting them to dashboard if successful and email verified\r\n  // ..show VerifyEmailInfoBox if user is successfully logged in but hasn't verified their email address\r\n  // ..show error-box if login isn't successful\r\n  async function handleSubmit(event) {\r\n    event.preventDefault()\r\n    setLoading(true)\r\n    setShowEmailVerificationBox(false)\r\n    setError(\"\")\r\n    setCanBeRedirected(false)\r\n\r\n    try{\r\n      await login(email,password)\r\n      .then((userCredentials) => {\r\n        if(userCredentials.user.emailVerified){\r\n          setCanBeRedirected(true)\r\n        } else {\r\n          setShowEmailVerificationBox(true)\r\n          logout()\r\n        }\r\n        \r\n      })\r\n      .catch((error) => {setError(error.code)})\r\n    } catch {setError(\"auth/unknown-error\")}\r\n\r\n    if(canBeRedirected){\r\n      history.push(\"/dashboard\")\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  // logs user in, resends verification-email, logs them out\r\n  async function resendVerificationEmail(setEmailSend) {\r\n\t\ttry {\r\n      await login(email,password)\r\n      .then((userCredential) => {\r\n          userCredential.user.sendEmailVerification()\r\n          .then(() => {\r\n            setEmailSend(true)\r\n            logout()\r\n          })\r\n          .catch(() => {\r\n            setError(\"auth/too-many-attempts\")\r\n            logout()\r\n          })\r\n        }\r\n      )\r\n      .catch((error) => {setError(error.code)})\r\n\t\t} catch {setError(\"auth/unknown-error\")}\r\n\t}\r\n\r\n  // render login component\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"logo-container\">\r\n        <Logo />\r\n      </div>\r\n\r\n      <div className=\"login-container\">\r\n        <Logo />\r\n        <div className=\"form-box\">\r\n          <form className=\"login-form\" onSubmit={handleSubmit}>\r\n            <AuthenticationInput type=\"email\" form=\"login-form\" label=\"email\" onChange={({target: {value}}) => setEmail(value)}/>\r\n            <AuthenticationInput type=\"password\" form=\"login-form\" label=\"password\"  onChange={({target: {value}}) => setPassword(value)}/>\r\n\r\n            <div className=\"forgot-password-container\">\r\n              <p className=\"forgot-password\" onClick={() => {setShowPasswordResetModal(true)}}>\r\n                forgot password\r\n              </p>\r\n            </div>\r\n            {error && <ErrorBox errorCode={error}/>}\r\n            {showEmailVerificationBox && !error && <VerifyEmailInfoBox resendVerificationEmail={resendVerificationEmail} onLogin/>}\r\n            <input className=\"login-button\" type=\"submit\" value=\"Login\" disabled={loading}/>\r\n            <div className=\"sign-up-container\">\r\n              <Link to=\"/signup\">SIGN UP</Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      {showPasswordResetModal && <ResetPasswordModal onClose={() => {setShowPasswordResetModal(false)}}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\n// reset-password modal react component\r\nfunction ResetPasswordModal({onClose}){\r\n  // creates states for component\r\n  const [emailForNewPassword,setEmailForNewPassword] = useState()\r\n  const [resetEmailWasSent, setResetEmailWasSent] = useState(false)\r\n  // accessing resetPassword method from AuthContext\r\n  const { resetPassword } = useAuth()\r\n\r\n  // sends email for password-reset to users email address\r\n  async function handleResetSubmit(){\r\n    try {\r\n      await resetPassword(emailForNewPassword)\r\n      setResetEmailWasSent(true)\r\n    } catch {\r\n      alert(\"Something went wrong...\")\r\n    }\r\n  }\r\n\r\n  // render reset-password modalbox using ModalBox component\r\n  return (\r\n    <ModalBox onClose={onClose}>\r\n      <h2>Reset Password</h2>\r\n      <p>Please enter your email address and we will send you an email with instructions to set a new password.</p>\r\n      <div className=\"password-reset-box\" onSubmit={handleResetSubmit}>\r\n        <div className=\"email-input\">\r\n          <label>Email:</label>\r\n          <input \r\n            className=\"username-input\" \r\n            type=\"email\" \r\n            onChange={({target: {value}}) => setEmailForNewPassword(value)} \r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"button-container\">\r\n          {!resetEmailWasSent && <button onClick={() => handleResetSubmit()}>Reset Password</button>}\r\n          {resetEmailWasSent && <p>Email has been sent.</p>}\r\n        </div>\r\n      </div>\r\n    </ModalBox>\r\n  )\r\n}\r\n\r\nexport default Login;","import '../../scss/dashboard/logout.scss';\r\nimport { useAuth } from '../../AuthContext'\r\nimport { useHistory } from 'react-router-dom';\r\nimport React, { useState } from \"react\";\r\n\r\n// Logout function to handle logout on button click / uses logout function from firebase\r\nfunction Logout() {\r\nconst {currentUser, logout} = useAuth();\r\nconst history = useHistory();\r\nconst [error, setError] = useState(\"\");\r\n\r\n  async function handleLogout() {\r\n    setError(\"\");\r\n\r\n    try {\r\n      await logout();\r\n      history.push('/login');\r\n    } catch {\r\n      setError('Failed to log out');\r\n    }\r\n  }\r\n\r\n  return (\r\n  \t<button className=\"logout\" onClick={handleLogout}>\r\n\t\t  Logout\r\n\t\t</button>\r\n  );\r\n}\r\n\r\nexport default Logout;","import '../../scss/dashboard/settings.scss';\r\nimport Logout from './Logout.js';\r\nimport { useState } from 'react';\r\n\r\n// Simple settings function so set a class on active state\r\nfunction Settings() {\r\n  const [open,setOpen] = useState(false);\r\n\r\n  function openSettings() {\r\n    setOpen(!open);\r\n  }\r\n\r\n  return (\r\n    <div className=\"settings\">\r\n      <div onClick={openSettings} className=\"settings-opener\"></div>\r\n      <div className={`settings-wrapper ${open ? \"open\" : \"closed\"}`}>\r\n        <div className=\"settings-window\">\r\n          <Logout />\r\n          <button onClick={() => setOpen(false)} className='close-settings'>X</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Settings;","import '../../scss/dashboard/budget.scss';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport { db } from '../../firebase/firebase';\r\nimport { auth } from '../../firebase/firebase';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction Budget() {\r\n  // Create state variables: budget,isSaved,labelText,isEdit\r\n  var [budget,setBudget] = useState();\r\n  var isDiffGreen = false;\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [isSaved, setSave] = useState(false);\r\n  const [labelText, setLabelText] = useState(\"New monthly budget\");\r\n  const dispatch = useDispatch();\r\n\r\n  //Get Current State from ExpenseList\r\n  const moneyActivityList = useSelector(state => state.moneyActivityList);\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  // Get the current logged in user`s uid\r\n  const userId = auth.currentUser.uid; \r\n  const dbRef = db.ref(\"users/\" + userId);\r\n  \r\n  // Function to get the current user`s budget / fetch from the firebase database\r\n  // Promises a return value to wait for database fetch\r\n  async function fetchUserBaseBudget(callback) {\r\n    const getBaseBudget = new Promise((baseBudget) => {\r\n      dbRef.on('value', (snapshot) => {\r\n      const userObj = snapshot.val();\r\n      baseBudget(userObj.baseBudget);\r\n    })})\r\n\r\n    var promiseResult =  await getBaseBudget;\r\n\r\n    dispatch({type: 'baseBudget/setBaseBudget', baseBudget:  promiseResult});\r\n    setBudget(promiseResult);\r\n\r\n\r\n    callback();\r\n  }\r\n\r\n  // UseEffect Hook will invoke at component render\r\n  useEffect(() => {\r\n    if(!isEdit) {\r\n      fetchUserBaseBudget(checkEmptyBudget);\r\n    }\r\n  });\r\n\r\n  // Function to get each expense and calculate the current budget\r\n  function calcCurrBudget() {\r\n    var allExpenses = 0;\r\n    var allCredits = 0;\r\n\r\n    moneyActivityList.forEach(entry => {\r\n      if (entry.type === 'sub') {\r\n        allExpenses += entry.amount; \r\n      } else {\r\n        allCredits += entry.amount;\r\n      }\r\n    });\r\n\r\n    return budget + allCredits - allExpenses;\r\n  }\r\n\r\n  // Function to get value from budget input and push it as /user/budget entry to the firebase database\r\n  function addBudget() {\r\n    setIsEdit(false);\r\n  \r\n    // Check if input number is a number\r\n    if(isNaN(budget)) {\r\n      alert(\"input is not a number\");\r\n      return false;\r\n    } else {\r\n      // Update new Budget value in database\r\n      db.ref(\"users/\" + userId).update({\r\n        baseBudget: parseFloat(budget)\r\n      });\r\n    }\r\n  }\r\n\r\n  // Checks on render if the budget from firebase is empty and sets the label of the input accordingly\r\n  function checkEmptyBudget() {\r\n    if(!isEdit) {\r\n      if (budget !== 0 && budget !== \"\" && budget !== undefined) {\r\n        setLabelText(\"Current Budget\");\r\n        setSave(true);\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Checks budget value and sets it if not empty as current budget input value\r\n  function checkValue() {\r\n    if(isEdit) {\r\n      return;\r\n    } else {\r\n        if (budget !== 0 && budget !== \"\" && budget !== undefined) {\r\n        return calcCurrBudget().toFixed(2) + \" €\";\r\n      } else {\r\n        return budget;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Function to check for current baseBudget difference, calculate difference and set it\r\n  function checkDifference() {\r\n    if (budget !== 0 && budget !== \"\" && budget !== undefined) {\r\n      const currBudget = calcCurrBudget();\r\n      if (currBudget > budget) {\r\n        isDiffGreen = true;        \r\n        return \"+ \" + (currBudget - budget).toFixed(2);\r\n      } else { if (budget > currBudget) {\r\n        isDiffGreen = false; \r\n        return \"- \" + (budget - currBudget).toFixed(2);\r\n        } else {\r\n          isDiffGreen = true;   \r\n          return 0;\r\n        } \r\n      } \r\n    } else {\r\n      return budget;\r\n    }\r\n  }\r\n\r\n  // Handle save submit from form and run addBudget function\r\n  function handleSave(event) {\r\n    event.preventDefault();\r\n    setSave(true);\r\n    addBudget();\r\n  }\r\n\r\n  // Edit budget per click\r\n  function editBudget() {\r\n    setBudget();\r\n    setIsEdit(true);\r\n    setSave(false);\r\n     \r\n  }\r\n\r\n  // Main jsx component rendering // Html Structure\r\n   return (\r\n     <div className={`budget-container ${isSaved ? \"saved\" : \"not-saved\"}`}>\r\n     <button className=\"edit-budget\" onClick={() => editBudget()}>Edit</button>\r\n        <form className={`budget-form floating-inputs ${isSaved ? \"saved\" : \"not-saved\"}`} onSubmit={handleSave.bind(this)}>\r\n          <input name=\"budget\" type=\"text\" className=\"budget\" value={checkValue()} onBlur={({target: {value}}) => setBudget(value)} required/>\r\n          <button type=\"submit\" className=\"save-budget\">Save</button>\r\n          <span className=\"budget-label\">{labelText}</span>\r\n          <div className=\"diff-container\">\r\n            <input value={checkDifference()} className={`budget-diff ${isDiffGreen ? \"diff-green\" : \"diff-red\"}`}></input>\r\n            <span className=\"budget-label\">Difference of base budget</span>\r\n          </div>\r\n        </form>\r\n        <button onClick={() => editBudget()}>EDIT</button>\r\n     </div>\r\n    );\r\n  }\r\n  \r\n// Export budget function to use in other components\r\nexport default Budget; ","import '../../scss/dashboard/list-of-monthly-activities.scss';\r\nimport { db, auth } from '../../firebase/firebase';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// Main component function / Functional component\r\nfunction ListOfMonthlyActivities() {\r\n  // Create date function and save current date values in variables\r\n  var date = new Date();\r\n  var mm = String(date.getMonth() + 1).padStart(2, '0');\r\n  var yyyy = date.getFullYear();\r\n  var currMonthandYear = mm + yyyy;\r\n  \r\n  // Save userID from auth to variable / get database path\r\n  const userId = auth.currentUser.uid; \r\n  const dbRef = db.ref(\"users/\" + userId + \"/expenses/\" + currMonthandYear);\r\n  const dispatch = useDispatch();\r\n  \r\n  // Get Expense list as variable\r\n  const moneyActivityList = useSelector(state => state.moneyActivityList); \r\n  const [isListEmpty, setListEmpty] = useState(false);\r\n  const [render, reRender] = useState(\"\");\r\n\r\n  // Function to get current activity from database and push objects to array\r\n  function fetchUserMoneyActivityEntries(dispatch) {\r\n    var  activityList = [];\r\n\r\n    dbRef.on('value', (snapshot) => {\r\n      const userObj = snapshot.val();\r\n\r\n      if (userObj !== null && userObj !== \"\" && userObj !== 0) {\r\n        Object.keys(userObj).forEach(function(prop) {\r\n          activityList.push(userObj[prop]);\r\n             \r\n        });\r\n        dispatch({type: 'moneyActitivtyList/updateList', list:  activityList}); \r\n\r\n        activityList = [];\r\n        setListEmpty(false);\r\n\r\n      } else {\r\n        setListEmpty(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  // On component render get list and re render component\r\n  useEffect(() => {\r\n    fetchUserMoneyActivityEntries(dispatch);\r\n    \r\n    setTimeout(() => {\r\n      reRender(\"Updated\");\r\n    }, 100);\r\n  }, [dispatch]);\r\n\r\n  // Main jsx render // HTML Structure\r\n  return (\r\n    <div className=\"list-container\">\r\n      <div className=\"list-titles\">\r\n        <div className=\"list-title\">Amount</div>\r\n        <div className=\"list-title\">Description</div>\r\n        <div className=\"list-title\">Date</div>\r\n        <div className=\"list-title\">Monthly</div>\r\n      </div>\r\n      { isListEmpty ? ( \r\n        <p>no entries yet</p>\r\n      ) : (\r\n        moneyActivityList.map((entry) => \r\n          <div key={entry.id} className=\"entry-container\">\r\n            <div className={`list-item amount-container ${entry.type === 'sub' ? \"expense\" : \"credit\"}`} >\r\n              {entry.type === 'sub' ? \"- \" + entry.amount.toFixed(2) : \"+ \" + entry.amount.toFixed(2)}\r\n            </div>\r\n            <div className=\"list-item description-container\">\r\n              {entry.description}\r\n            </div>\r\n            <div className=\"list-item date-container\">\r\n              {entry.date}\r\n            </div>\r\n            <div className=\"list-item is-monthly-container\">\r\n              {entry.isMonthly.toString()}\r\n            </div>\r\n          </div>)\r\n        )\r\n      }\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default ListOfMonthlyActivities; ","import '../../scss/dashboard/new-money-activity.scss';\r\nimport React, {useState} from 'react';\r\nimport { db, auth } from '../../firebase/firebase';\r\n\r\n// Main functional component\r\nfunction NewMoneyActivity () {\r\n  \r\n  // Define constant useState variables // useState re renders component and can be used to handle global state\r\n  const [labelText, setLabelText] = useState(\"\");\r\n  const [newMoneyActivityWindow, setView] = useState(false);\r\n  const [isChecked, setChecked] = useState(false);\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [typeState, setType] = useState(\"\");\r\n\r\n  const userId = auth.currentUser.uid; \r\n  \r\n  // Create new Date object and return full Date\r\n  var date = new Date();\r\n  var dd = String(date.getDate()).padStart(2, '0');\r\n  var mm = String(date.getMonth() + 1).padStart(2, '0');\r\n  var yyyy = date.getFullYear();\r\n  var hh = date.getHours();\r\n  var min = date.getMinutes();\r\n  var ss = date.getSeconds();\r\n  var ms = date.getMilliseconds();\r\n  date = dd + '/' + mm + '/' + yyyy;\r\n\r\n  var dateId = dd + mm + yyyy + hh + min + ss + ms;\r\n  var currMonthandYear = mm + yyyy;\r\n\r\n  // Path to database save to constant variable\r\n  const dbRef = db.ref(\"users/\" + userId + \"/expenses/\" + currMonthandYear + \"/\" + dateId);\r\n  \r\n  const handleView = (labelTextPara, type) => {\r\n    setType(type);\r\n    setLabelText(labelTextPara);\r\n    setView(true);\r\n  };\r\n\r\n  //create new activity entry in database\r\n  const writeNewMoneyActivity = () => {\r\n    dbRef.set({\r\n      type: typeState,\r\n      amount: parseFloat(amount),\r\n      description: description,\r\n      isMonthly: isChecked,\r\n      date: date,\r\n      id: dateId\r\n    });\r\n\r\n    setView(false);\r\n  }\r\n\r\n  // Main jsx render // HTML Structure\r\n  return (\r\n    <div className=\"button-and-new-money-activity-container\">\r\n      <div className=\"new-credit-entry\">\r\n        <button className=\"new-credit-entry-button\" onClick={() => handleView(\"Add as monthly credit entry\", \"add\")}></button>\r\n      </div>\r\n      <div className=\"new-expense\">\r\n        <button className=\"new-expense-button\" onClick={() => handleView(\"Add as monthly expense\", \"sub\")}></button>\r\n      </div>\r\n      <div className={`new-money-activity-wrapper ${newMoneyActivityWindow ? \"showNewMoneyActivitiyWindow\" : \"hideNewMoneyActivitiyWindow\"}`}>\r\n        <div className=\"new-money-activity-container\">\r\n          <span className=\"window-title\">Add New Money Activity</span>\r\n          <button className=\"close\" onClick={() => setView(false)}>X</button>\r\n          <div className=\"text-input-box\">\r\n            <div>\r\n              <input type=\"text\" className=\"money\" onChange={({target: {value}}) => setAmount(value)} required/>\r\n              <span className=\"floating-label\">amount</span>\r\n            </div>\r\n            <div>\r\n              <input type=\"text\" className=\"description\" onChange={({target: {value}}) => setDescription(value)} required/>\r\n              <span className=\"floating-label\">description</span>\r\n            </div>\r\n          </div>\r\n          <input defaultChecked={isChecked} onChange={() => setChecked(!isChecked)} type=\"checkbox\" className=\"checkbox\"/>\r\n          <label htmlFor=\"checkbox\">\r\n            {labelText}\r\n          </label>\r\n          <div className=\"save-container\">\r\n            <button onClick={() => writeNewMoneyActivity()} className=\"save\">Save</button>\r\n          </div> \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewMoneyActivity;","import '../scss/dashboard/dashboard.scss';\r\nimport '../scss/dashboard/dashboard-views.scss';\r\nimport Logo from '../components/logo.js';\r\nimport Settings from '../components/dashboard/settings.js';\r\nimport React, { useState } from \"react\";\r\nimport Budget from '../components/dashboard/budget.js';\r\nimport ListOfMonthlyActivities from '../components/dashboard/list-of-monthly-activities';\r\nimport { NavLink } from 'react-router-dom';\r\nimport NewMoneyActivity from '../components/dashboard/new-money-activities.js';\r\n\r\n// Create dashboard component and render main site html/jsx\r\nfunction Dashboard() {\r\n\tconst [isActive, setActive] = useState(\"false\");\r\n\r\n  const handleToggle = () => {\r\n    setActive(!isActive);\r\n  };\r\n\r\n  // Render with components\r\n  return (\r\n    <div className={`dashboard mobile-dash ${isActive ? \"closed\" : \"active\"}`}>\r\n      <div className={`sidebar mobile ${isActive ? \"closed\" : \"active\"}`}>\r\n        <div className=\"container\">\r\n          <div className=\"menu-burger\" onClick={handleToggle}>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n        <div className=\"dashboard-views\">\r\n          <NavLink activeClassName=\"active\" to=\"/dashboard\">D</NavLink>\r\n          <NavLink activeClassName=\"active\" to=\"/savings\">S</NavLink>\r\n        </div>\r\n          <Settings />\r\n        </div>\r\n      </div>\r\n      <div className=\"main-section\">\r\n        <Logo />\r\n        <div className=\"main-dashboard\">\r\n          <div className=\"budget-and-new-money-activity-container\">\r\n            <NewMoneyActivity />\r\n            <Budget />\r\n          </div>\r\n          <ListOfMonthlyActivities />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import '../../scss/dashboard/new-goal.scss';\r\nimport { db } from '../../firebase/firebase';\r\nimport { auth } from '../../firebase/firebase';\r\nimport React, {useState} from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\nfunction NewGoal() {\r\n\r\n  const [goalAmount, setGoalAmount] = useState(0);\r\n  const [monthlyGoalAmount, setMonthlyGoalAmount] = useState(0);\r\n  const [goalName, setGoalName] = useState('');\r\n  const [newGoalWindow, setView] = useState(false);\r\n \r\n\r\n  const userId = auth.currentUser.uid; \r\n  var date = new Date();\r\n  var dd = String(date.getDate()).padStart(2, '0');\r\n  var mm = String(date.getMonth() + 1).padStart(2, '0');\r\n  var yyyy = date.getFullYear();\r\n  var hh = date.getHours();\r\n  var min = date.getMinutes();\r\n  var ss = date.getSeconds();\r\n  var ms = date.getMilliseconds();\r\n  date = dd + '/' + mm + '/' + yyyy;\r\n\r\n  var dateId = dd + mm + yyyy + hh + min + ss + ms;\r\n  var currMonthandYear = mm + yyyy;\r\n\r\n  // Path to database save to constant variable\r\n  const dbRefGoals = db.ref(\"users/\" + userId + \"/goals/\" + dateId);\r\n  const dbRefExpenses = db.ref(\"users/\" + userId + \"/expenses/\" + currMonthandYear + \"/\" + dateId);\r\n\r\n  // Create new goal entry in database\r\n  function addNewGoal() {\r\n    dbRefGoals.set({\r\n      goalName: goalName,\r\n      goalAmount: parseFloat(goalAmount),\r\n      monthlyGoalAmount: monthlyGoalAmount,\r\n      date: date,\r\n      id: dateId\r\n    });\r\n    writeNewMoneyActivity()\r\n    setView(false);\r\n  }\r\n\r\n  // Add goal entry to monthly money activity list\r\n  function writeNewMoneyActivity() {\r\n    dbRefExpenses.set({\r\n      type: 'sub',\r\n      amount: parseFloat(monthlyGoalAmount),\r\n      description: goalName,\r\n      isMonthly: true,\r\n      date: date,\r\n      id: dateId\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"button-and-new-goal-container\">\r\n      <div className=\"new-goal-entry\">\r\n        <button className=\"new-goal-button\" onClick={() => setView(true)}>+ New Goal</button>\r\n      </div>\r\n      <div className={`new-goal-wrapper ${newGoalWindow ? \"showNewGoalWindow\" : \"hideNewGoalWindow\"}`}>\r\n        <div className=\"new-goal-container\">\r\n          <span className=\"window-title\">New Goal</span>\r\n          <button className=\"close\" onClick={() => setView(false)}>X</button>\r\n          <div className=\"text-input-box\">\r\n            <div>\r\n              <input type=\"text\" className=\"goal-description\" onChange={({target: {value}}) => setGoalName(value)} required/>\r\n              <span className=\"floating-label\">Goal Name</span>\r\n            </div>\r\n            <div>\r\n              <input type=\"text\" className=\"goalAmount\" onChange={({target: {value}}) => setGoalAmount(value)} required/>\r\n              <span className=\"floating-label\">Goal Amount</span>\r\n            </div>\r\n            <div>\r\n              <input type=\"text\" className=\"monthlyAmount\" onChange={({target: {value}}) => setMonthlyGoalAmount(value)} required/>\r\n              <span className=\"floating-label\">Monthly Amount</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"save-container\">\r\n            <button onClick={() => addNewGoal()} className=\"save\">SAVE</button>\r\n          </div> \r\n        </div>\r\n     </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewGoal;","import '../../scss/dashboard/goals.scss';\r\nimport { db } from '../../firebase/firebase';\r\nimport { auth } from '../../firebase/firebase';\r\nimport React, {useState} from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction Goals() {\r\n  var [goalList, setGoalList] = useState();\r\n  const [isListEmpty, setListEmpty] = useState(true);\r\n  const userId = auth.currentUser.uid; \r\n  const dispatch = useDispatch();\r\n  const baseBudget = useSelector(state => state.baseBudget);\r\n\r\n  const dbRef = db.ref(\"users/\" + userId + \"/goals/\");\r\n \r\n  function fetchCurrentGoals(dispatch) {\r\n    var goalList = [];\r\n    dbRef.on('value', (snapshot) => {\r\n      const userObj = snapshot.val();\r\n      console.log(userObj)\r\n\r\n      if (userObj !== undefined && userObj !== \"\" && userObj !== 0 && userObj !== null) {\r\n        console.log(\"WEGNIOWEGNIWGENWIEGO\")\r\n        Object.keys(userObj).forEach(function(prop) {\r\n          goalList.push(userObj[prop]);\r\n          console.log(goalList)\r\n        });\r\n\r\n        dispatch({type: 'savingsList/updateList', list:  goalList});\r\n        setGoalList(goalList);\r\n        goalList = [];\r\n        setListEmpty(false);\r\n        console.log(isListEmpty)\r\n      } else {\r\n\r\n        setListEmpty(true);\r\n        console.log(baseBudget)\r\n      }\r\n    });\r\n  }\r\n\r\n  function calcGoalReachTime(goalAmount, monthlyGoalAmount) {\r\n    return parseInt(goalAmount / monthlyGoalAmount);\r\n  }\r\n\r\n  console.log(baseBudget)\r\n  const [render, reRender] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchCurrentGoals(dispatch);\r\n    setTimeout(() => {\r\n      reRender(\"Updated\");\r\n    }, 100);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"goals-wrapper\">\r\n      { isListEmpty ? ( \r\n        <p>no entries yet</p>\r\n      ) : (\r\n        goalList.map((entry) => \r\n          <div key={entry.id} className=\"goal\">\r\n            <div className=\"goal-body\">\r\n              <h5 className=\"goal-card-titles\">Goal Name</h5>\r\n               {entry.goalName}\r\n            </div>\r\n            <div className=\"goal-body\">\r\n              <h5 className=\"goal-card-titles\">Goal</h5>\r\n              {entry.goalAmount} €\r\n            </div>\r\n            <div className=\"goal-body\">\r\n              <h5 className=\"goal-card-titles\">Monthly goal</h5>\r\n              {entry.monthlyGoalAmount} €\r\n            </div>\r\n            <div className=\"goal-body\">\r\n              <h5 className=\"goal-card-titles\">Goal reached in</h5>\r\n              {calcGoalReachTime(entry.goalAmount, entry.monthlyGoalAmount)} month(s).\r\n            </div>\r\n            <div className=\"goal-body\">\r\n              <h5 className=\"goal-card-titles\">Set on</h5>\r\n              {entry.date}\r\n            </div>\r\n          </div>)\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n  export default Goals;","import '../scss/dashboard/dashboard.scss';\r\nimport '../scss/dashboard/savings.scss';\r\nimport Logo from '../components/logo.js';\r\nimport Settings from '../components/dashboard/settings.js';\r\nimport React, { useState } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport NewGoal from '../components/dashboard/new-goal';\r\nimport Goals from '../components/dashboard/goals';\r\n\r\n\r\nfunction Savings() {\r\n\tconst [isActive, setActive] = useState(\"false\");\r\n\r\n  const handleToggle = () => {\r\n    setActive(!isActive);\r\n  };\r\n\r\n  return (\r\n\t<div className={`dashboard saving mobile-dash ${isActive ? \"closed\" : \"active\"}`}>\r\n\t\t<div className={`sidebar mobile ${isActive ? \"closed\" : \"active\"}`}>\r\n        <div className=\"container\">\r\n          <div className=\"menu-burger\" onClick={handleToggle}>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n          </div>\r\n          <div className=\"dashboard-views\">\r\n            <NavLink activeClassName=\"active\" to=\"/dashboard\">D</NavLink>\r\n            <NavLink activeClassName=\"active\" to=\"/savings\">S</NavLink>\r\n          </div>\r\n          <Settings />\r\n         </div>\r\n\t\t</div>\r\n\t\t<div className=\"main-section\">\r\n\t\t  <Logo />\r\n      <NewGoal />\r\n      <Goals />\r\n\t\t</div>\r\n\t</div>\r\n  );\r\n}\r\n\r\nexport default Savings;","const passwordMinEigthCharacters = new RegExp('^(.){8,}$');\r\nconst passwordMinOneSpecialCharacter = new RegExp('[!@#$%^&*(),.?\":{}|<>\\-_\\'/\\\\=§;`´+~]','g');\r\nconst passwordMinOneCapitalizedLetter = new RegExp('[A-ZÄÜÖ]');\r\nconst passwordMinOneNumber = new RegExp('[0-9]');\r\n\r\n// validates password requirements using RegExp \r\nconst validatePassword = (password, passwordConfirmation) => {\r\n  if(password !== passwordConfirmation){ \r\n    return false\r\n  }\r\n  if(!passwordMinEigthCharacters.test(password)){ \r\n    return false\r\n  }\r\n  if(!passwordMinOneSpecialCharacter.test(password)){ \r\n    return false\r\n  }\r\n  if(!passwordMinOneCapitalizedLetter.test(password)){ \r\n    return false\r\n  }\r\n  if(!passwordMinOneNumber.test(password)){ \r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport default validatePassword;","import '../scss/signup.scss';\r\nimport Logo from '../components/logo';\r\nimport React, {useState} from 'react';\r\nimport validatePassword from '../validation/passwordValidation';\r\nimport AuthenticationInput from '../components/AuthenticationInput';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../AuthContext';\r\nimport VerifyEmailInfoBox from '../components/VerifyEmailInfoBox';\r\nimport { db } from '../firebase/firebase';\r\nimport ErrorBox from '../components/ErrorBox';\r\n\r\n// signup react-component\r\nconst Signup = () => {\r\n  // creates states for singup component\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [passwordRulesView, setView] = useState(false)\r\n  const [showEmailVerificationBox, setShowEmailVerificationBox] = useState(false)\r\n  const [error, setError] = useState(\"\")\r\n  // accessing signup and login methods from AuthContext\r\n  const { signup, logout } = useAuth()\r\n\r\n  // creates database entry for newly registered user (if it doesn't already exist)\r\n  async function createDatabaseEntry(uid){\r\n    db.ref('users/' + uid).set({\r\n      baseBudget : 0,\r\n      budget : 0,\r\n      expenses : {},\r\n      goals: {},\r\n      History: {}\r\n    }).then(()=> {\r\n      logout()\r\n    }).catch((error) => {\r\n      alert(error)\r\n    })\r\n  }\r\n\r\n  // checks if all fields needed for signup are filled\r\n  function checkIfAllFieldsAreFilled(){\r\n    if(!email){\r\n      setError(\"auth/missing-email\")\r\n      return false;\r\n    }\r\n    if(!password){\r\n      return false;\r\n    }\r\n    if(!passwordConfirmation){\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  // checks if fields are valid, signs up user and shows the email-verification info-box\r\n  // if fields aren't valid or signup fails the error-box is shown\r\n  async function handleSubmit(event) {\r\n    event.preventDefault()\r\n    setError(\"\")\r\n    var validParameters = true\r\n\r\n    if(!checkIfAllFieldsAreFilled()){\r\n      setError(\"auth/missing-fields\")\r\n      validParameters = false\r\n    }\r\n    if(!validatePassword(password,passwordConfirmation) && validParameters){\r\n      setError(\"auth/password-insufficient\")\r\n      validParameters = false\r\n    }\r\n\r\n    if (validParameters){\r\n      try{\r\n        setLoading(true)\r\n        await signup(email,password)\r\n        .then((userCredential) => {\r\n          userCredential.user.sendEmailVerification()\r\n          createDatabaseEntry(userCredential.user.uid)\r\n          setShowEmailVerificationBox(true)\r\n        })\r\n        .catch(error => setError(error.code))\r\n      } catch {setError(\"auth/unknown-error\")}\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // render signup component\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"logo-container\">\r\n        <Logo />\r\n      </div>\r\n      <div className=\"signup-container\">\r\n        <Logo />\r\n        <div className=\"form-box\">\r\n          <form className=\"signup-form\" onSubmit={handleSubmit}>\r\n            <AuthenticationInput type=\"email\" form=\"signup-form\" label=\"email\" onChange={({target: {value}}) => setEmail(value)}/>\r\n            <AuthenticationInput type=\"password\" form=\"signup-form\" label=\"password\" onFocus={() => setView(true)} onBlur={() => setView(false)} onChange={({target: {value}}) => setPassword(value)}/>\r\n            \r\n            <div className={`password-rules-container ${passwordRulesView ? \"showPasswordRules\" : \"hidePasswordRules\"}`}>\r\n              <h3>Your password must contain at least:</h3>\r\n              <ul>\r\n                <li>8 charaters</li>\r\n                <li>one capitalized letter</li>\r\n                <li>one number</li>\r\n                <li>one special charater</li>\r\n              </ul>\r\n            </div>\r\n            <AuthenticationInput type=\"confirm\" form=\"signup-form\" label=\"confirm password\" onChange={({target: {value}}) => setPasswordConfirmation(value)}/>\r\n\r\n            {error && <ErrorBox errorCode={error} styling={error}/>}\r\n            {showEmailVerificationBox && !error && <VerifyEmailInfoBox/>}\r\n\r\n            <input className=\"signup-button\" type=\"submit\" value=\"Sign Up\" disabled={loading}/>\r\n            <div className=\"sign-up-container\">\r\n              <Link to=\"/budget-app/login\">Login</Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../src/AuthContext\"\r\n\r\n// creates simple route only accessible if user is logged in and verified\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  // accessing currentUser from AuthContext\r\n  const { currentUser } = useAuth()\r\n  // checks if user is logged in and if email is verified\r\n  var userIsLoggedInAndVerified = currentUser ? currentUser.emailVerified : false\r\n\r\n  // renders page if user is logged in and email is verified\r\n  // otherwise redirects to login page\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return userIsLoggedInAndVerified ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import React from \"react\"\r\nimport { Route, Redirect } from \"react-router-dom\"\r\nimport { useAuth } from \"../src/AuthContext\"\r\n\r\n// creates route only accessible when user isn't authenticated\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  // accessing currentUser from AuthContext\r\n  const { currentUser } = useAuth()\r\n  // checks if user is logged in and whether email is verified\r\n  var userIsLoggedInAndVerified = currentUser ? currentUser.emailVerified : false\r\n\r\n  // renders page if user is NOT logged in or email is NOT verified\r\n  // otherwise redirects to dashboard\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        return userIsLoggedInAndVerified ? <Redirect to=\"/dashboard\" /> : <Component {...props} />\r\n      }}\r\n    ></Route>\r\n  )\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport { createLogger } from 'redux-logger';\r\n\r\n// Define logger handler\r\nconst loggerMiddleware = createLogger();\r\n\r\n// Define our main redux states and save it to store\r\nconst initialState = {\r\n  moneyActivityList: [],\r\n  goalList: [],\r\n  baseBudget: 0.0,\r\n};\r\n\r\n// Create the store\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n      loggerMiddleware\r\n    ),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n// Create reducer function which checks for changes in different states\r\nfunction rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'moneyEntry/addEntry':\r\n        return onAddMoneyEntry(state);\r\n    case 'moneyEntry/deleteEntry':\r\n        return onDeleteMoneyEntry(state, action.id);\r\n    case 'moneyActitivtyList/updateList':\r\n      console.log('LIST')\r\n        return onDashBoardLoad(state, action.list);\r\n    case 'goalList/updateList':\r\n        return onSavingsLoad(state, action.list);\r\n    case 'baseBudget/setBaseBudget':\r\n        console.log('SET BUDGET')\r\n        return setBaseBudget(state, action.baseBudget);\r\n    default:\r\n        console.warn('Action not found.', action);\r\n        return state;\r\n  }\r\n}\r\n\r\n// Function to copy and return current activity list\r\nfunction onDashBoardLoad(state, list) {\r\n var copiedMoneyActivityList = [...state.moneyActivityList];\r\n\r\n  copiedMoneyActivityList = list;\r\n  state.moneyActivityList = copiedMoneyActivityList;\r\n\r\n  return state;\r\n}\r\n\r\n// Function to add a new activity entry to state\r\nfunction onAddMoneyEntry(state, entry) {\r\n  var copiedMoneyActivityList = [...state.moneyActivityList];\r\n\r\n  copiedMoneyActivityList.push(entry);\r\n  state.moneyActivityList = copiedMoneyActivityList;\r\n\r\n  return state;\r\n}\r\n\r\n// Function to delete activity list entries\r\nfunction onDeleteMoneyEntry(state, entryId) {\r\n  var copiedMoneyActivityList = [...state.moneyActivityList];\r\n  const deleteEntryIndex = findEntryIndexById(state, entryId);\r\n\r\n  copiedMoneyActivityList.splice(deleteEntryIndex, 1);\r\n    state.moneyActivityList = copiedMoneyActivityList;\r\n\r\n    return state;\r\n}\r\n\r\n// Function to copy and return current savings list\r\nfunction onSavingsLoad(state, list) {\r\n  var copiedGoalList = [...state.goalList];\r\n \r\n  copiedGoalList = list;\r\n   state.goalList = copiedGoalList;\r\n \r\n   return state;\r\n }\r\n\r\n function setBaseBudget(state, baseBudget) {\r\n\r\n   return {\r\n     ...state,\r\n     baseBudget: baseBudget\r\n   }\r\n }\r\n\r\nfunction findEntryIndexById(state, entryId) {\r\n  return state.moneyActivityList.findIndex(entry => entry.id === entryId);\r\n}\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Login from './views/Login.js';\r\nimport Dashboard from './views/Dashboard.js';\r\nimport Savings from './views/Savings.js';\r\nimport Signup from './views/Signup';\r\nimport './index.scss';\r\nimport { AuthProvider } from './AuthContext';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport UnauthenticatedRoute from './UnauthenticatedRoute';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store.js';\r\n// Main Imports of all files/views\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\n// Frontend real vh \r\nlet vh = window.innerHeight * 0.01;\r\ndocument.documentElement.style.setProperty('--vh', `${vh}px`);\r\n\r\nconst rootElement = document.getElementById('root') || document.createElement('div') ;\r\n\r\n// Main render function for all sites/views\r\nReactDOM.render(\r\n\t<Router basename=\"/budget-app\">\r\n\t\t<AuthProvider> \r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<UnauthenticatedRoute exact path=\"/login\" component={Login} />\r\n\t\t\t\t\t<UnauthenticatedRoute exact path=\"/signup\" component={Signup} />\r\n\t\t\t\t\t<PrivateRoute path=\"/dashboard\" component={Dashboard} />\r\n\t\t\t\t\t<PrivateRoute path=\"/savings\" component={Savings} />\r\n\t\t\t\t\t<PrivateRoute path=\"/\"><Redirect to=\"/dashboard\" /></PrivateRoute>\r\n\t\t\t\t</Switch>\r\n\t\t\t</Provider>\r\n\t\t</AuthProvider>\r\n\t</Router>,\r\n\trootElement\r\n);\r\n"],"sourceRoot":""}